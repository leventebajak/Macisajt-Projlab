import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import javax.swing.SwingUtilities;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

public class SelectorPanel extends JPanel implements MouseListener {

    public Component selectedComponent = null;
    private final JPanel sender;
    private final String message;
    private final Object lock;

    public SelectorPanel(String message, JPanel sender, Object lock) {
        this.message = message;
        this.sender = sender;
        this.lock = lock;
        initComponents();
    }

    public SelectorPanel(JPanel sender, Object lock) {
        this.message = "<html><p style=\"text-align:center\">Kattintson<br>egy elemre!</p></html>";
        this.sender = sender;
        this.lock = lock;
        initComponents();
    }

    private void initComponents() {
        JButton bCancel = new JButton();
        JLabel lMessage = new JLabel();

        setBackground(View.PRIMARY_COLOR);
        setForeground(View.SECONDARY_COLOR);
        setPreferredSize(new Dimension(300, 500));

        bCancel.setBackground(View.SECONDARY_COLOR);
        bCancel.setFont(new Font("Segoe UI", Font.BOLD, 14));
        bCancel.setForeground(View.PRIMARY_COLOR);
        bCancel.setText("MÃ‰GSE");
        bCancel.addActionListener(this::bCancelActionPerformed);

        lMessage.setFont(new Font("Segoe UI", Font.BOLD, 24));
        lMessage.setForeground(View.SECONDARY_COLOR);
        lMessage.setHorizontalAlignment(SwingConstants.CENTER);
        lMessage.setText(message);

        // Generated by NetBeans
        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(78, 78, 78)
                                .addComponent(bCancel, GroupLayout.PREFERRED_SIZE, 145, GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(79, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lMessage, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(102, Short.MAX_VALUE)
                                .addComponent(lMessage, GroupLayout.PREFERRED_SIZE, 204, GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bCancel, GroupLayout.PREFERRED_SIZE, 60, GroupLayout.PREFERRED_SIZE)
                                .addGap(116, 116, 116))
        );
        // End of generated code

        GameWindow.map.addMouseListener(this);
    }

    private void reset() {
        synchronized (lock) {
            lock.notify();
        }
        View.GAME_WINDOW.setPlayerPanel(sender);
        GameWindow.map.removeMouseListener(this);
    }

    private void bCancelActionPerformed(ActionEvent evt) {
        reset();
    }

    @Override
    public void mouseClicked(MouseEvent e) {
        synchronized (lock) {
            if (!SwingUtilities.isLeftMouseButton(e)) {
                reset();
                return;
            }
            var selection = Control.getComponentByCoordinates(e.getPoint());
            if (selection == null) {
                reset();
                return;
            }
            selectedComponent = selection;
            reset();
//            System.out.println(selection.getClass().getSimpleName());
        }
    }

    @Override
    public void mousePressed(MouseEvent e) {
    }

    @Override
    public void mouseReleased(MouseEvent e) {
    }

    @Override
    public void mouseEntered(MouseEvent e) {
    }

    @Override
    public void mouseExited(MouseEvent e) {
    }
}